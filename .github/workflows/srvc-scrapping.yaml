name: srvc-scrapping

on:
  push:
    branches: ["**"]
    paths:
      - 'apps/srvc-scrapping/**'
    tags:
      - 'srvc-scrapping-v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/srvc-scrapping

jobs:
  lint:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      - name: Go Format
        run: go fmt ./...
        working-directory: ./apps/srvc-scrapping
      - name: Go Lint
        run: go vet ./...
        working-directory: ./apps/srvc-scrapping

  build:
    if: github.event_name == 'push'
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      - run: |
          go mod tidy
          go mod download
        working-directory: ./apps/srvc-scrapping
      - run: go build -o bin/api src/cmd/main.go
        working-directory: ./apps/srvc-scrapping

  test:
    if: github.event_name == 'push'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      - run: go build -o bin/api src/cmd/main.go
        working-directory: ./apps/srvc-scrapping
      - name: Start dependencies
        working-directory: ./apps/srvc-scrapping
        run: docker compose up -d
      - name: Run API + Tests
        working-directory: ./apps/srvc-scrapping
        run: |
          set +e
          ./bin/api &
          API_PID=$!
          go test -v ./...
          kill -9 ${API_PID} || true
          set -e
      - name: Stop dependencies
        working-directory: ./apps/srvc-scrapping
        run: docker compose down

  build-docker:
    if: startsWith(github.ref, 'refs/tags/srvc-scrapping-v')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'
      - uses: docker/setup-buildx-action@v3
      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag,pattern=srvc-scrapping-v{{version}}
            type=sha
      - id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./apps/srvc-scrapping
          file: ./docker/srvc-scrapping.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Sign the published Docker image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
