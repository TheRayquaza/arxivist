/**
 * Repo-Article
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RepoArticleSrcApiDtoTreeRSSResponse model module.
 * @module model/RepoArticleSrcApiDtoTreeRSSResponse
 * @version 1.0.0
 */
class RepoArticleSrcApiDtoTreeRSSResponse {
    /**
     * Constructs a new <code>RepoArticleSrcApiDtoTreeRSSResponse</code>.
     * @alias module:model/RepoArticleSrcApiDtoTreeRSSResponse
     */
    constructor() { 
        
        RepoArticleSrcApiDtoTreeRSSResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RepoArticleSrcApiDtoTreeRSSResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepoArticleSrcApiDtoTreeRSSResponse} obj Optional instance to populate.
     * @return {module:model/RepoArticleSrcApiDtoTreeRSSResponse} The populated <code>RepoArticleSrcApiDtoTreeRSSResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepoArticleSrcApiDtoTreeRSSResponse();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('children')) {
                obj['children'] = ApiClient.convertToType(data['children'], [RepoArticleSrcApiDtoTreeRSSResponse]);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RepoArticleSrcApiDtoTreeRSSResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RepoArticleSrcApiDtoTreeRSSResponse</code>.
     */
    static validateJSON(data) {
        if (data['children']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['children'])) {
                throw new Error("Expected the field `children` to be an array in the JSON data but got " + data['children']);
            }
            // validate the optional field `children` (array)
            for (const item of data['children']) {
                RepoArticleSrcApiDtoTreeRSSResponse.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * @member {Boolean} active
 */
RepoArticleSrcApiDtoTreeRSSResponse.prototype['active'] = undefined;

/**
 * @member {Array.<module:model/RepoArticleSrcApiDtoTreeRSSResponse>} children
 */
RepoArticleSrcApiDtoTreeRSSResponse.prototype['children'] = undefined;

/**
 * @member {String} created_at
 */
RepoArticleSrcApiDtoTreeRSSResponse.prototype['created_at'] = undefined;

/**
 * @member {String} description
 */
RepoArticleSrcApiDtoTreeRSSResponse.prototype['description'] = undefined;

/**
 * @member {Number} id
 */
RepoArticleSrcApiDtoTreeRSSResponse.prototype['id'] = undefined;

/**
 * @member {String} link
 */
RepoArticleSrcApiDtoTreeRSSResponse.prototype['link'] = undefined;

/**
 * @member {String} name
 */
RepoArticleSrcApiDtoTreeRSSResponse.prototype['name'] = undefined;

/**
 * @member {String} updated_at
 */
RepoArticleSrcApiDtoTreeRSSResponse.prototype['updated_at'] = undefined;

/**
 * @member {String} display_name
 */
RepoArticleSrcApiDtoTreeRSSResponse.prototype['display_name'] = undefined;


export default RepoArticleSrcApiDtoTreeRSSResponse;
