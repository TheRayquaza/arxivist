definitions:
  repo_article_src_api_dto.ArticleCreateRequest:
    properties:
      abstract:
        type: string
      category:
        type: string
      id:
        description: 'Optional: If provided, must be unique'
        type: integer
      link:
        type: string
      published_at:
        type: string
      subcategory:
        type: string
      title:
        type: string
    required:
    - category
    - link
    - published_at
    - subcategory
    - title
    type: object
  repo_article_src_api_dto.ArticleTriggerIngestionRequest:
    properties:
      begin_date:
        type: string
      end_date:
        type: string
    required:
    - begin_date
    - end_date
    type: object
  repo_article_src_api_dto.ArticleUpdateRequest:
    properties:
      abstract:
        type: string
      category:
        type: string
      id:
        type: integer
      link:
        type: string
      subcategory:
        type: string
      title:
        type: string
    required:
    - id
    type: object
  repo_article_src_api_dto.FeedbackRequest:
    properties:
      value:
        type: boolean
    type: object
  repo_article_src_api_dto.FeedbackStatsResponse:
    properties:
      article_title:
        type: string
      dislike_count:
        type: integer
      like_count:
        type: integer
      like_ratio:
        type: number
      news_id:
        type: integer
      total_count:
        type: integer
    type: object
  repo_article_src_data_models.Article:
    properties:
      abstract:
        type: string
      category:
        type: string
      created_at:
        type: string
      id:
        type: integer
      link:
        type: string
      published_at:
        type: string
      subcategory:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  repo_article_src_data_models.Feedback:
    properties:
      article:
        allOf:
        - $ref: '#/definitions/repo_article_src_data_models.Article'
        description: <-- link to Article
      created_at:
        type: string
      id:
        type: integer
      news_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
      value:
        description: 0 = dislike, 1 = like
        type: integer
    type: object
info:
  contact: {}
paths:
  /articles:
    get:
      description: Get a list of articles with optional filtering and pagination
      parameters:
      - description: Filter by category
        in: query
        name: category
        type: string
      - description: Filter by subcategory
        in: query
        name: subcategory
        type: string
      - description: Search in title and abstract
        in: query
        name: search
        type: string
      - default: 10
        description: Limit number of results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get all articles
      tags:
      - Articles
    post:
      consumes:
      - application/json
      description: Create a new article with the provided data
      parameters:
      - description: Article data
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/repo_article_src_api_dto.ArticleCreateRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/repo_article_src_data_models.Article'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create a new article
      tags:
      - Articles
  /articles/{id}:
    delete:
      description: Delete an article by ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete article
      tags:
      - Articles
    get:
      description: Get a specific article by its ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repo_article_src_data_models.Article'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get article by ID
      tags:
      - Articles
    put:
      consumes:
      - application/json
      description: Update an existing article by ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      - description: Article update data
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/repo_article_src_api_dto.ArticleUpdateRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repo_article_src_data_models.Article'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Update article
      tags:
      - Articles
  /articles/{id}/feedback:
    delete:
      consumes:
      - application/json
      description: Delete user feedback for a specific article
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Delete feedback for an article
      tags:
      - feedback
    get:
      consumes:
      - application/json
      description: Get feedback statistics and user's feedback for a specific article
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repo_article_src_api_dto.FeedbackStatsResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get feedback for a specific article
      tags:
      - feedback
    post:
      consumes:
      - application/json
      description: Create or update user feedback for a specific article
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      - description: Feedback data
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/repo_article_src_api_dto.FeedbackRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Create feedback for an article
      tags:
      - feedback
  /articles/categories:
    get:
      description: Get all available article categories
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get categories
      tags:
      - Articles
  /articles/ingestion:
    post:
      description: Trigger ingestion of articles published within a specified date
        range
      parameters:
      - description: Article update data
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/repo_article_src_api_dto.ArticleTriggerIngestionRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Trigger article ingestion
      tags:
      - Articles
  /articles/subcategories:
    get:
      description: Get subcategories for a specific category or all subcategories
      parameters:
      - description: Filter subcategories by category
        in: query
        name: category
        type: string
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Get subcategories
      tags:
      - Articles
  /feedback/all:
    get:
      consumes:
      - application/json
      description: Get all feedback with pagination (Admin only)
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repo_article_src_data_models.Feedback'
            type: array
      security:
      - JWT: []
      summary: Get all feedback
      tags:
      - feedback
  /feedback/csv:
    get:
      consumes:
      - application/json
      description: Export all article feedback data to CSV format (Admin only)
      parameters:
      - description: Start date (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            type: file
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - JWT: []
      summary: Export all feedback to CSV
      tags:
      - feedback
  /feedback/my:
    get:
      consumes:
      - application/json
      description: Get all feedback given by the authenticated user
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repo_article_src_data_models.Feedback'
            type: array
      security:
      - JWT: []
      summary: Get user's feedback history
      tags:
      - feedback
  /feedback/stats:
    get:
      consumes:
      - application/json
      description: Get aggregated feedback statistics for all articles (Admin only)
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repo_article_src_api_dto.FeedbackStatsResponse'
            type: array
      security:
      - JWT: []
      summary: Get feedback statistics
      tags:
      - feedback
swagger: "2.0"
