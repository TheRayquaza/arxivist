---
kind: ConfigMap
apiVersion: v1
metadata:
  name: postgres-values
  namespace: postgres
data:
  values.yaml: |
    replicaCount: 1

    image:
      repository: ghcr.io/cloudnative-pg/cloudnative-pg
      pullPolicy: IfNotPresent
      tag: "1.26.0"

    imagePullSecrets: []

    hostNetwork: false
    dnsPolicy: ""

    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
        maxSurge: 1

    crds:
      # -- Specifies whether the CRDs should be created when installing the chart.
      create: true

    # -- The webhook configuration.
    webhook:
      port: 9443
      mutating:
        create: true
        failurePolicy: Fail
      validating:
        create: true
        failurePolicy: Fail
      livenessProbe:
        initialDelaySeconds: 3
      readinessProbe:
        initialDelaySeconds: 3
      startupProbe:
        failureThreshold: 6
        periodSeconds: 5

    # Operator configuration.
    config:
      create: true
      name: cnpg-controller-manager-config
      secret: false
      # -- This option determines if the operator is responsible for observing
      # events across the entire Kubernetes cluster or if its focus should be
      # narrowed down to the specific namespace within which it has been deployed.
      clusterWide: true
      # -- The content of the configmap/secret, see
      # https://cloudnative-pg.io/documentation/current/operator_conf/#available-options
      # for all the available options.
      data: {}
      # INHERITED_ANNOTATIONS: categories
      # INHERITED_LABELS: environment, workload, app
      # WATCH_NAMESPACE: namespace-a,namespace-b
      # -- The maximum number of concurrent reconciles. Defaults to 10.
      maxConcurrentReconciles: 10

    serviceAccount:
      # -- Specifies whether the service account should be created.
      create: true
      name: ""

    rbac:
      # -- Specifies whether ClusterRole and ClusterRoleBinding should be created.
      create: true
      # -- Aggregate ClusterRoles to Kubernetes default user-facing roles.
      # Ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
      aggregateClusterRoles: false

    # -- Annotations to be added to all other resources.
    commonAnnotations: {}
    # -- Annotations to be added to the pod.
    podAnnotations: {}
    # -- Labels to be added to the pod.
    podLabels: {}

    # -- Container Security Context.
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsUser: 10001
      runAsGroup: 10001
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - "ALL"

    # -- Security Context for the whole pod.
    podSecurityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
      # fsGroup: 2000

    # -- Priority indicates the importance of a Pod relative to other Pods.
    priorityClassName: ""

    service:
      type: ClusterIP
      # -- DO NOT CHANGE THE SERVICE NAME as it is currently used to generate the certificate
      # and can not be configured
      name: cnpg-webhook-service
      port: 443
      # -- Set the ip family policy to configure dual-stack see [Configure dual-stack](https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services)
      ipFamilyPolicy: ""
      # -- Sets the families that should be supported and the order in which they should be applied to ClusterIP as well. Can be IPv4 and/or IPv6.
      ipFamilies: []

    resources: {}
      # If you want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      #
      # limits:
      #   cpu: 100m
      #   memory: 200Mi
      # requests:
      #   cpu: 100m
      #   memory: 100Mi

    # -- Nodeselector for the operator to be installed.
    nodeSelector: {}

    # -- Topology Spread Constraints for the operator to be installed.
    topologySpreadConstraints: []

    # -- Tolerations for the operator to be installed.
    tolerations: []

    # -- Affinity for the operator to be installed.
    affinity: {}

    monitoring:

      # -- Specifies whether the monitoring should be enabled. Requires Prometheus Operator CRDs.
      podMonitorEnabled: false
      # -- Metrics relabel configurations to apply to samples before ingestion.
      podMonitorMetricRelabelings: []
      # -- Relabel configurations to apply to samples before scraping.
      podMonitorRelabelings: []
      # -- Additional labels for the podMonitor
      podMonitorAdditionalLabels: {}

      grafanaDashboard:
        create: false
        # -- Allows overriding the namespace where the ConfigMap will be created, defaulting to the same one as the Release.
        namespace: ""
        # -- The name of the ConfigMap containing the dashboard.
        configMapName: "cnpg-grafana-dashboard"
        # -- Label that ConfigMaps should have to be loaded as dashboards.  DEPRECATED: Use labels instead.
        sidecarLabel: "grafana_dashboard"
        # -- Label value that ConfigMaps should have to be loaded as dashboards.  DEPRECATED: Use labels instead.
        sidecarLabelValue: "1"
        # -- Labels that ConfigMaps should have to get configured in Grafana.
        labels: {}
        # -- Annotations that ConfigMaps can have to get configured in Grafana.
        annotations: {}

    # Default monitoring queries
    monitoringQueriesConfigMap:
      # -- The name of the default monitoring configmap.
      name: cnpg-default-monitoring
      # -- A string representation of a YAML defining monitoring queries.
      queries: ""
