kind: ConfigMap
apiVersion: v1
metadata:
  name: mlflow-values
  namespace: mlflow
data:
  values.yaml: |
    log:
      level: info
      enabled: true

    image:
      tag: "3.3.2"
      pullPolicy: IfNotPresent
      repository: bitnami/mlflow

    ingress:
      enabled: true
      className: "traefik"
      hosts:
        - host: mlflow.localhost
          paths:
            - path: /
              pathType: Prefix

    extraVolumes:
      - name: mlflow-volume
        persistentVolumeClaim:
          claimName: mlflow-pvc

    extraVolumeMounts:
      - name: mlflow-volume
        mountPath: /mlflow

    service:
      name: http
      port: 5000
      type: ClusterIP
      enabled: true
      containerPort: 5000
      containerPortName: mlflow

    strategy:
      type: RollingUpdate

    extraArgs:
      workers: "4"
      # staticPrefix: /mlflow # we should use this if we want to serve mlflow under /mlflow path

    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 200m
        memory: 1Gi

    telemetry:
      enabled: true

    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 70

    artifactRoot:
      proxiedArtifactStorage: true
      s3:
        #path: ""
        bucket: "mflow"
        enabled: true
        awsAccessKeyId: "minio"
        awsSecretAccessKey: "minio123"

      defaultArtifactRoot: ./mlruns
      proxiedArtifactStorage: false
      defaultArtifactsDestination: ./mlartifacts

    backendStore:
      postgres:
        enabled: true
        host: "postgres-cluster-rw.postgres.svc.cluster.local"
        port: 5432
        user: "mlflow"
        database: "mlflow"
        password: "mysupersecretpassword"
      databaseMigration: true
      databaseConnectionCheck: true

    extraEnvVars:
      # S3 Configuration
      AWS_DEFAULT_REGION: "us-east-1"
      MLFLOW_S3_IGNORE_TLS: true
      MLFLOW_S3_ENDPOINT_URL: "http://minio-svc.minio.svc.cluster.local:9000"

      # Database Connection Pooling
      MLFLOW_SQLALCHEMYSTORE_POOL_SIZE: "10"  # SQLAlchemy connection pool size
      MLFLOW_SQLALCHEMYSTORE_MAX_OVERFLOW: "20"  # SQLAlchemy max overflow connections
      MLFLOW_SQLALCHEMYSTORE_POOL_RECYCLE: "3600"  # SQLAlchemy pool recycle time

      # Logging and Monitoring
      MLFLOW_LOGGING_LEVEL: "INFO"  # MLflow logging level
      MLFLOW_ENABLE_SYSTEM_METRICS_LOGGING: "true"  # Enable system metrics logging
      MLFLOW_SYSTEM_METRICS_SAMPLING_INTERVAL: "1.0"  # System metrics sampling interval

    replicaCount: 1

    livenessProbe:
      periodSeconds: 30
      timeoutSeconds: 3
      failureThreshold: 5
      initialDelaySeconds: 10

    readinessProbe:
      periodSeconds: 30
      timeoutSeconds: 3
      failureThreshold: 5
      initialDelaySeconds: 10

    serviceAccount:
      name: ""
      create: true
      automount: true

    serviceMonitor:
      labels:
        release: prometheus
      enabled: false
      timeout: 10s
      interval: 30s
      namespace: monitoring
      telemetryPath: /metrics
      useServicePort: false

    securityContext:
      runAsUser: 1000
      runAsNonRoot: true
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false

    podSecurityContext:
      fsGroup: 2000
      runAsUser: 1000
      runAsGroup: 3000
      fsGroupChangePolicy: OnRootMismatch
